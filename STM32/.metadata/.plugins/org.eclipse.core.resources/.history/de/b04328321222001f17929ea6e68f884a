/*
 * bsp.h
 *
 *  Created on: May 22, 2024
 *      Author: 23877
 */

#ifndef BSP_H_
#define BSP_H_

#include "usart.h"
#include "can.h"
#include "CDC_msg.h"

#define UART_BUFFER_SIZE 255

typedef struct {
	UART_HandleTypeDef *handle;
	uint8_t rx_buff[UART_BUFFER_SIZE];
} UART_port_info;

typedef struct {
	GPIO_TypeDef *port;
	uint16_t pin;
	UART_port_info uart;
} RS485_port_info;

typedef struct {
	CAN_HandleTypeDef *handle;
	CAN_TxHeaderTypeDef TxHeader;      //发送句柄
	CAN_RxHeaderTypeDef RxHeader;      //接收句柄
} CAN_info;

// 用于虚拟串口接收中断与freertos间通信
extern CmdMsg g_cmd_msg;
extern TrajMsg g_traj_msg;

void BSP_Init();

void RS485_Send(uint8_t ind, const uint8_t *data, uint16_t size, uint32_t timeout);
void RS485_Send_DMA(uint8_t ind, const uint8_t *data, uint16_t size);
void USER_UART_IDLECallback(UART_HandleTypeDef *huart);	// 自定义串口空闲中断回调函数
void USER_UART_IRQHandler(UART_HandleTypeDef *huart);	// 自定义串口空闲中断处理函数

void CAN_Filter_Init();   //过滤器配置函数
void CAN_Send_Msg(uint8_t can_ind, uint8_t id, uint8_t *msg, uint8_t len);  //数据发送函数

void CDC_Process_Recv_Data(uint8_t *data, uint32_t Len);
void Process_Cable_Cmd(MotorMsg *data, uint32_t Len);
void Process_Archor_Cmd(MotorMsg *data, uint32_t Len);
void Process_GO_Cmd(MotorMsg *data, uint32_t Len);
void Process_A1_Cmd(MotorMsg *data, uint32_t Len);
void Process_Traj_Cmd(TrajMsg *data, uint32_t Len);

#endif /* BSP_H_ */
