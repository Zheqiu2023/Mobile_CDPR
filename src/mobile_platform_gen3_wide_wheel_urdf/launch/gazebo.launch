<launch>
  <arg name="paused" value="false"/>
  <arg name="use_sim_time" value="true"/>
  <arg name="gui" value="true"/>
  <arg name="recording" value="false"/>
  <arg name="debug" value="false"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="recording" value="$(arg recording)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
  
  <!--find the URDF model -->
  <param name="robot_description" command="cat $(find mobile_platform_gen3_wide_wheel_urdf)/urdf/mobile_platform_gen3_wide_wheel_urdf.urdf"/>
    <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-param robot_description -urdf -model mobile -z 1"
    output="screen" />

  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />

  <rosparam file="$(find mobile_platform_gen3_wide_wheel_urdf)/config/sim_config.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" ns="/" args="joint_state_controller LF0_controller RF0_controller LB0_controller RB0_controller
      LF2_controller RF2_controller LB2_controller RB2_controller"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
  </node>

  <node pkg="cdpr_gazebo" type="cdpr_gazebo_node" name="cdpr_gazebo" output="screen">
    <rosparam file="$(find cdpr_gazebo)/config/cdpr_config.yaml" command="load"/>
  </node>
</launch>