motor_run_type: 0   # 0: position, 1: close to motor, 2: away from motor, 3: reset, 4: config_param
lead: 5
step_angle: 1.8
sub_divide: 16  # same as sub_divide in operating_param

# if read cmd_config with XmlRpc::XmlRpcValue, the data will be saved in alphabetic order, that is "left back", "left front", "right back", "right front"
# so use "m0 m1 m2 m3" as the key instead of "left front, right front, left back, right back"
cmd_config:
  m0:  # left front
    dev_ind: 0
    can_ind: 0
    can_id: 0xc1
    direction: 1
  m1:  # right front
    dev_ind: 0
    can_ind: 0
    can_id: 0xc2
    direction: 1
  m2:  # left back
    dev_ind: 1
    can_ind: 0
    can_id: 0xc3
    direction: 1
  m3: # right back
    dev_ind: 1
    can_ind: 0
    can_id: 0xc4
    direction: -1

<<: &param
  plus_start_time: [0xf4, 0x00, 0, 0, 0x10] # startup cycle
  plus_constant_time: [0x3c, 0, 0, 0, 0x0e] # constant speed cycle
  acc_steps: [0x20, 0x03, 0, 0, 0] # acceleration steps
  acc_cof: [0xcd, 0xcc, 0x4c, 0x3d, 0x12] # acceleration factor
  sub_divide: [0x10, 0, 0, 0, 0x0a] # subdivide
  reset_mode: [0x80, 0, 0, 0, 0x0c] # operating mode: 0x80 for m0 m1 m2; 0x00 for m3
  phase_current: [0, 0, 0x90, 0x40, 0x16] # phase current
operating_param: 
  m0:
    <<: *param
    can_id: [0xc1, 0, 0, 0, 0x08] # CAN ID
  m1:
    <<: *param
    can_id: [0xc2, 0, 0, 0, 0x08]
  m2:
    <<: *param
    can_id: [0xc3, 0, 0, 0, 0x08]
  m3:
    <<: *param
    can_id: [0xc4, 0, 0, 0, 0x08]
  
target_data:
  target_pos_arr: [0x0, 0xff, 0, 0] 
  target_vel_close_arr: [0, 0xff, 0x01, 0] 
  target_vel_away_arr: [0, 0xff, 0, 0]